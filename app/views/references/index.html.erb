<div class="row text-center">
  <div class="col-xs-12">
    <h1>Welcome <%= current_user.name %></h1>
    <h2>References Page</h2>
    <hr/>
  </div>
</div>

<div class="row top-buffer">
  <div class="col-xs-12">
    <p class="lead">Try to checkout all of the following reference pages</p>
  </div>
</div>

<div class="row top-buffer">
  <div class="col-xs-12">
    <div class="panel panel-primary">
      <div class="panel-heading">
        <%= link_to references_sqli_path, class: "panel-title" do %>
          SQL Injection <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
        <p>
          SQL Injection can be avoided by making sure you are careful with including
          user input or user controlled values in your queries, especially when you
          aren't using the methods in ActiveRecord by passing in parameters as hashes
          or arrays. It is important to be aware of how the data you are using in your
          queries is set, and being explicit in how they are used.
        </p>
        <p>
          If you have to use string interpolation for a user provided string in your
          custom query, use ActiveRecord::Base::sanitize(input). BE CAREFUL,
          you can still get unauthorized reads using this method. It isn't the
          end all be all protection from sql injection. It is up to you to check
          the structure of your queries after they are generated by ActiveRecord
          (See the <%= link_to "sql injection reference page",
            references_sqli_path(ref_num:0, anchor: "n10") %> for the where method
           for an example)
        </p>
      </div>
      <div class="panel-footer">
        <%= link_to "http://guides.rubyonrails.org/security.html#sql-injection",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="col-xs-12">
    <div class="panel panel-primary xss-panel">
      <div class="panel-heading xss-heading">
        <%= link_to references_xss_path, class: "panel-title" do %>
          Cross Site Scripting <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
        <p>
          Cross Site Scripting (XSS) is a vulnerability introduced by showing user
          input back to other users without proper sanitization. This can lead to
          the execution of logic in your application via injected javascript by
          affected users.
        </p>
      </div>
      <div class="panel-footer">
        <%= link_to "http://guides.rubyonrails.org/security.html#cross-site-scripting-xss",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
</div>
