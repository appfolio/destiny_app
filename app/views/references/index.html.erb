<div class="row text-center">
  <div class="col-xs-12">
    <h1>Welcome <%= current_user.name %></h1>
    <h2>References Page</h2>
    <hr/>
  </div>
</div>

<div class="row top-buffer">
  <div class="col-xs-12">
    <p class="lead">
      Check out the following reference pages for a hands on look
      into each vulnerability.
    </p>
  </div>
</div>

<div class="row top-buffer">
  <div class="col-xs-12">
    <div class="panel panel-primary">
      <div class="panel-heading">
        <%= link_to sql_injection_path, class: "panel-title" do %>
          SQL Injection <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
          SQL Injection vulnerabilities can have very wide ranging effects when
          exploited. A single vulnerability could allow remote access with
          elevated priviledges on the database server, or unauthorized reads and
          writes (including cross database dumping).
      </div>
      <div class="panel-footer">
        <%= link_to "http://guides.rubyonrails.org/security.html#sql-injection",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="col-xs-12">
    <div class="panel panel-primary xss-panel">
      <div class="panel-heading xss-heading">
        <%= link_to cross_site_scripting_path, class: "panel-title" do %>
          Cross Site Scripting <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
          Cross Site Scripting (XSS) is a vulnerability introduced by displaying user
          input back to other users without proper sanitization. This can lead to
          undesired execution of logic in your application. It can serve as a way
          for a malicious user to bypass authorization and execute other attacks.
      </div>
      <div class="panel-footer">
        <%= link_to "http://guides.rubyonrails.org/security.html#cross-site-scripting-xss",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="col-xs-12">
    <div class="panel panel-primary xss-panel">
      <div class="panel-heading xss-heading">
        <%= link_to mass_assignment_ma_path, class: "panel-title" do %>
          Mass Assignment <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
          Mass assignment used in an unsecured way can allow sensitive
          attributes to be over-written with user input. Make sure you never mass
          assign with a hash object if it can contain user input.
      </div>
      <div class="panel-footer">
        <%= link_to "https://github.com/appfolio/shields_up",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
  <div class="col-xs-12">
    <div class="panel panel-primary xss-panel">
      <div class="panel-heading xss-heading">
        <%= link_to csrf_path, class: "panel-title" do %>
          Cross Site Request Forgery <span class="glyphicon glyphicon-share-alt"></span>
        <% end %>
      </div>
      <div class="panel-body">
        Cross Site Request Forgery (CSRF) is when malicious requests are sent
        across origin from a domain that is succeptible to malicious input. CSRF
        vulnerabilites are not prevalent and NON-GET requests can be easily
        protected by CSRF tokens.
      </div>
      <div class="panel-footer">
        <%= link_to "https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)",
          target: "_blank" do %>
          Documentation <span class="glyphicon glyphicon-book"></span>
        <% end %>
      </div>
    </div>
  </div>
</div>
